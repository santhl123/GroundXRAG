# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class MeterDetail(UniversalBaseModel):
    """
    Current usage and limits for the user for the given metric
    """

    max: typing.Optional[int] = pydantic.Field(default=None)
    """
    Maximum limit for the current billing period
    """

    meter_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="meterId")] = pydantic.Field(
        default=None
    )
    """
    Unique system generated ID for the meteric
    """

    value: typing.Optional[int] = pydantic.Field(default=None)
    """
    Current usage for the current billing period
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
