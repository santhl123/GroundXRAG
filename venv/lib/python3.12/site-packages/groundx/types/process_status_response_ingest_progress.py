# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .process_status_response_ingest_progress_cancelled import ProcessStatusResponseIngestProgressCancelled
from .process_status_response_ingest_progress_complete import ProcessStatusResponseIngestProgressComplete
from .process_status_response_ingest_progress_errors import ProcessStatusResponseIngestProgressErrors
from .process_status_response_ingest_progress_processing import ProcessStatusResponseIngestProgressProcessing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ProcessStatusResponseIngestProgress(UniversalBaseModel):
    cancelled: typing.Optional[ProcessStatusResponseIngestProgressCancelled] = None
    complete: typing.Optional[ProcessStatusResponseIngestProgressComplete] = None
    errors: typing.Optional[ProcessStatusResponseIngestProgressErrors] = None
    processing: typing.Optional[ProcessStatusResponseIngestProgressProcessing] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
